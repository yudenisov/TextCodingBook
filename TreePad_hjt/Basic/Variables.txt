Типы данных в QUICK и VISUAL Basic

Обозначения переменных в BASIC
	В Basic имя переменной является идентификатором и может состоять из больших и малых прописных латинских букв A-Za-z и цифр 0-9. Ни в QUICK BASIC, ни в Visual Basic регистр букв не существенен. Это значит, что имена saratov, Saratov и SARATOV обозначают одну и ту же переменную.
	Максимальная длина имени переменной вместе с суффиксом не должна превышать 40 символов.
	В QUICK BASIC переменные подразделяются на типы. Для переменной каждого типа к идентификатору должен быть дописан некоторый суффикс, а именно:

* Для вещественных переменных: суффикса нет;
* Для целочисленных переменных обычной длины: суффикс "%";
* Для целочисленных переменных типа LONG: суффикс "&";
* Для строковых переменных: суффикс "$";
	Поскольку в Visual Basic все данные имеют тип Variant, то никаких суффиксов ни в имени переменных, ни в имени функции у них не пишется. Поэтому функции MID$ на языке Quick Basic соответствует функция Mid на языке Visual Basic.
	Для переменных -- идентификаторов массивов после суффикса идёт выражение в скобках, определяющее индекс массива.
	В Quick Basic переменные никак не объявляются -- однажды появившись в программе в её левой части, они будут доступны сразу же во всей программе. Visual Basic также допускает подобное поведение, однако для ускорения счёта советуется всё-таки перед использованием объявить переменные, как на языке Си. Кроме того, обязательно должны быть объявлены массивы.
	Все переменные в Basic имеют локальную область видимости. ТО есть они определены только в тех функциях, в которых используются. Это не относится к функциям, определённым в Quick Basic с помощью ключевых слов GoSUB и DEF, но эти функции не являются функциями в строгом смысле этого слова, а скорее являются макроопределениями. Настоящие функции на языке Basic определяются конструкцией Sub … End Sub.

Типы данных в BASIC
	В языке QUICK BASIC существуют следующие простые типы данных:
1. Вещественные числа (Double). Этот тип данных является типом данных по умолчанию. соответствует типу данных двойной точности на языке Си;
2. Целочисленные переменные (Integer). Этот тип может принимать значения от -32768 до 32767, и соответствует двухбайтному целому числу на языке Си;
3. Целочисленные переменные типа (LONG). Эти числа соответствуют четырёхбайтному целому числу на языке Си и может принимать значения от -2147483648 до 2147483647.
4.Строковые переменные (String)). На языке QUICK BASIC символьные переменные представляют собой расширенный набор символов ASCII (каждый занимает 8 байт) длиной до 255 символов. В Visual Basic используются символы в кодировке UNICODE (длиной 2 байта) и, кроме того, практически снято ограничение на длину строки переменных.
	В Visual Basic существует только один тип данных -- VarType, который включает все эти типы данных, плюс явно неопределённые в QUICK BASIC типы данных. В зависимости от контекста в Visual Basic используется один из вышеперечисленных типов данных, причём преобразования типов проводятся автоматически.
	Среди подтипов данных в Visual Basics дополнительно существуют следующие типы:
* Boolean, который может принимать только два значения: True и False ("Истина" и "Ложь");
* Byte -- может содержать значение от 0 до 255;
* Empty -- неинициализированная переменная;
* Null -- переменная не содержит данных;
* Date -- переменная, содержащая в себе даты и время. Может содержать число, представляющее собой дату от 01 января 100 года до31 декабря 9999 года;
* Error -- переменная, которая содержит в себе номер ошибки, возникающей во время исполнения программы;
* Object -- переменная может содержать объект. Объект в Visual Basic -- аналог структуры на языке Си;
	Кроме простых типов данных, в Basic есть составные типы данных. В QUICK BASIC и Visual Basic есть тип данных "Массив" ("Array"). Он представляет собой цепочку данных, состоящий из примитивного типа данных, обращение же к каждому звену цепочки осуществляется по индексу массива. Индекс массива в Basic записывается в круглых скобках. Например, для обращения ко второму элементу целочисленного массива с идентификатором A% необходимо записать: A%(2). Массивы также могут быть многормерными.в этом случае второй и последующий индексы массива пишутся через ннак "запятвая" (","), например: B(2,3).

Объявление переменных в Basic
	Переменные в Basic определяются при помощи оператора Dim. Его синтаксис следующий:

Dim ПЕРЕМЕННАЯ[, ПЕРЕМЕННАЯ…][AS ТИП]

где ПЕРЕМЕННАЯ -- идентификаторы одной или более переменных, разделённые запятыми;
ТИП -- вышеперечисленный тип или подтип переменной.
	Примечание: конструкция "AS ТИП" определена только в Visual Basic. В QUICK Basic тип переменной явно определяет её суффикс.
	При определении массивов, которые обязательно должны объявляться перед использованием в любых версиях Basic, указывается идентификатор массива и его максимальные индексы. В QUICK Basic все массивы являются статичными, и их размерность менять нельзя. В Visual Basic размерность массива можно поменять оператором ReDim. Чтобы указать, что данные в массиве должны быть сохранены, после ключевого слова ReDim надо указать ключевое слово Preserve.

Отличия в обозначении массива в Quick Basic и Visual Basic
	В Quick Basic при работе с массивами используется математическая нотация: индекс массива начинается с единицы, последний индекс соответствует длине массива. В Visual Basic используется нотация языка Си. В ней первый индекс массива имеет обозначение "0", а последний индекс массива -- "длина_массива - 1". Это неудобно с точки зрения обычного вычислителя, но удобно с точки зрения системного программиста -- смещение первого элемента массива будет равно нулю, а не "единица минус единица". Однако в операторе Dim при объявлении массива будет указываться именно последний индекс массива, а не его длина.Так, чтобы объявить целочисленный одномерный массив из 10 символов, в Quick Basic нужно написать следующую конструкцию:

DIM A%(10)

а в Visual Basic:

Dim A(9) AS Integer