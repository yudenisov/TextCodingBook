<Treepad version 3.0>
dt=
<node>
Справочник. 1-е издание
0
Ю.А. Денисов, Ю.А. Бродская

Справочник 
по текстовым функциям языков веб-кодирования

справочник для студентов и веб-кодировщиков
1-е, пилотное издание

Саратов, 2017г

УДК
Ю
ББК

ISBN

	В книге даётся краткое описание текстовых функций, используемых в популярных языках для веб-кодирования а администрирования операционных систем: Perl, QuickBasic/VisualBasic Script, JavaScript, PHP. Даётся сравнение реализаций этих функций в этих языках программирования, что позволяет создавать программы для всех присутствующих на рынке технологий подготовки кода для веб-разработки и системного администрирования.
	Материал предназначен для веб-кодировщиков, веб-дизайнероов, специалистов, занимающихся поддержкой сайтов и систем по автоматизированной обработке текстовых данных, а также студентов, обучающихся на соответствующих специальностях ВУЗов.
	Данный пилотный выпуск распространяется по лицензии Creative Commons. Разрешена его  свободная переработка и переделка, но с обязательным указанием авторов идеи и первоначального воплощения, а также ссылка на издательство и сайты авторов.

Copyright © Ю.А.Денисов, Ю.А. Бродская, Саратов, Россия, 2000 – 2017 гг.

Содержание

A. Введение. Основные синтаксические правила языков веб-кодирования
B. Функции по манипуляции со символами
B.1. Удаление конечного символа завершения записи
B.1. Удаление конечного символа завершения записи
B.3. Возвращение символа из кодовой таблицы
B.4. Вычисление шестнадцатеричного числа
B.5. Количество символов в строке
B.6. Преобразование восьмеричного числа
B.7. Десятичный код символа
B.8. Преобразование числа в строку.
B.9. Нестандартные методы
B.9. Нестандартные методы
C. Функции манипуляции со строками
Содержание:
C.1. Преобразование символов в нижний регистр
C.2. Преобразование символов в верхний регистр
C.3. Сравнение строк
C.4. Конкатенация
C.5. Место вхождения подстроки в строку
C.6. Выделение подстроки в строке
C.7. Разбиение строк в массив строк
C.8. Удаление пробелов
C.9. Форматированный вывод в строку
C.10. Преобразование строки в число
C.11. Шифрование символов
C.12. Упаковка символов в двоичную структуру
C.13. Изменение порядка символов
C.14. Оптимизация регулярных выражений
C.15. Заполнение строк символом
D. Функции открытия и закрытия файлов
D.1. Открытие файла
D.2. Закрытие файла
D.3. Блокировка файла
D.4. Назначение файла стандартным потоком вывода по-умолчанию
E. Функции по текстовому вводу-выводу
E.1. Вывод данных
E.2. Чтение строк
E.3. Тест на конец файла
E.4. Следующий символ из файла
E.5. Вывод всплывающих сообщений
E.6. Ввод данных из диалогового окна
E.7. Функции вывода непосредственно в DOM (=)
E.8. Установка и чтение текущей позиции файла
E.9. Вывод  в стандартный поток ошибок
E.10. Чтение в двоичном режиме
E.11. Генерирование исключительных ситуаций
E.12. Номер дескриптора (в Perl fileno)
E.13. Изменение длины файла
Заключение
Л И Т Е Р А Т У Р А

Общий размер ~2,5 авторских листа, без иллюстраций

<end node> 5P9i0s8y19Z
dt=Text
<node>
A. Введение
1
Код, используемый в World Wide Web, жёстко делится на код, выполняемый на стороне сервера и код, выполняемый на стороне клиента. Это делается из соображений безопасности, чтобы ни клиентский компьютер, ни сервер не получил доступа к файловой системе, конфиденциальным данным, настройкам и т.п. друг друга.

К языкам, осуществляющим кодирование на стороне сервера, относятся следующие языки:

PHP (с расширениями), ASP.Net (с расширениями VB.Net, C#, JScript for Server), Perl (as CGI), Python (as CGI), Windows/Unix Shell (as CGI), SSI. Эти языки не разрешается "смешивать" между собой, однако ничто Вам не мешает использовать в одном проекте для разных файлов,модулей все эти языки.

Что касается серверных языков, то необходимо отметить, что первые два языка относяться к так называемы "гипертекстовым препроцессорам", и встраиваются в сам HTML текст. Язык PHP является универсальным. Он совместим практически с любыми веб-серверами (Apache, Microsoft IIS, LightHTTP, ngnix и т.п.). Расширение файлов, содержащих инструкции на этом языке -- ".php", файл по-умолчанию каталога должен иметь имя index.php. Внутри файла инструкции (код) языка php ограничивается скобками: <?php ... ?>. Этот код можно вставлять в любом месте PHP файла, можно с разрывами -- для интерпертатора это не существенно. Синтакис языке чувствителен к регистру символов.

Язык ASP.Net применяется только на веб-серверах корпорации Microsoft (Microsoft IIS), и тесно интегрирован в среду разработки Windows .Net Framework. Расширения файлов, содержащих инструкции на этом языке -- ".asp" и ".aspx", файл по-умолчанию для каталога -- "Default.asp". Внутри файла инструкции языка  ограничиваются скобками: <% ... %>, которые могут встретиться в любом месте файла ASP. Чувствительность к регистру определяется внешними расширениями. Так, синтаксис переменных и инструкций C# и JScript чувствителен к регистру символов, в то время как в VB.Net такой чувствительности нет.

Остальные языки из списка являются языками  CGI скриптов. CGI скрипты -- это программы, которые запускаются на стороне сервера, выводят сформированный HTML текст в  стандартный поток вывода, который веб сервером перенаправляетсЯ клиенту по http протоколу. Эта система очень гибкая, но не совсем безопасная, к тому же требующая большого объёма кодирования на языке высокого уровня. В настоящее время CGI используют только в специальных целях при создании борльших проектов, использующих большое количество веб-технологий и языков кодирования.

Код, выполняемый на стороне клиента, обычно написан на языке JavaScript, который поддерживается всеми браузерами. Особенность этого языка -- он не имеет доступ к файловой системе клиента, следовательно, не может осуществлять файловый ввод-вывод. Основное его предназначение -- управлять отображением веб-страниц, и подготавливать данные формы перед отправкой на сервер. JavaScript имеет собственные библшиотеки, наиболее из распространённых является jQuery, которая входит в большинство сред программирования.

<end node> 5P9i0s8y19Z
dt=Text
<node>
Синтаксис PHP
2
Язык PHP чувствителен к регистру символов.

Комментарии в PHP начинаются с символов "//", "#" (строчные комментарии) или заключаются знаками "/* ... */".

Любой оператор PHP заканчивается знаком ";".

Все переменные языка PHP начинаются со знака доллара "$", например:

$FirstVariable, $secondVariable

При объявлении переменных удобно использовать венгерскую нотацию. При этом надо помнить, что переменные предварительно нигде не описываются, и создаются в момент присвоения им значения.

Литералы в PHP заключаются в одинарные кавычки (апосторофы), если нужно представить строку "как есть", или в двойные кавычки, если в строке нужно использовать подстановочные знаки. Например, описание двух следующих строк одинаково:

'Товар стоит $100'
"Товар стоит \$100"

Для вывода литерали или переменной в файл используется функция echo, например:

<?php
echo "\n<p>The goods is cost: ";
$cost = '$100';
echo $cost;
echo '</p>';

Выедет в результирующий файл строку:

<p>The goods is cost $100</p>

В языке присутствуют стандартные операторы:

1. Присвоения значения;
2. Ветвления if then else;
3. Операторы цикла for, while, do while;
4. Оператор множественного выбора switch;
5. Другие операторы, синтаксис и назначение которых можно просмотреть в руководстве по языку PHP;

<end node> 5P9i0s8y19Z
dt=Text
<node>
Синтаксис ASP
2
Любой ASP сценарий должен начинаться с метатега 

<%@ Language="VB" %>

где вместо VB.Net может стоять любой другой язык программирования Microsoft.Net, который будет использоваться в качестве языка сценариев. Данная строка влияет на синтаксис других операторов ASP.Net!

Чувствительность ASP к регистру символов.определяется использованным в препроцессоре командным языком.

Если это специально не оговорено, знаки пробела в сценариях ASP игнорируются. Например, следующие выражения правильные, и делают одно и то же (присвоение переменной):

<% Color = "Green" %>
<%Color="Green"%>

Комментарии в ASP.Net определяются командным языком, указанным в начале ASP файла. Им же указываются синтаксис определения переменных и операторов, а также способ задания литералов..

Все переменные языка ASP желательно начинать со строчной латинской буквы, например:

iFirstVariable, secondVariable

При объявлении переменных удобно использовать венгерскую нотацию. 

Любой оператор PHP заканчивается знаком 

Для вывода литерали или переменной в файл используется конструкция "%=", или функция Responce.Write, например:

<%@ Language=VB %>

<% 
dim cost
cost = "$100"
%>
<%=  vbCrLf & "<p>The goods is cost: " %>
<%= cost %>
<%= "</p>" %>

Выедет в результирующий файл строку:

<p>The goods is cost $100</p>

В языке присутствуют стандартные операторы, синтаксис которых определяется командным языком.

Директива обработки <%@ ключевое слово %> позволяет передавать в ASP данные, которые необходимы для обработки файла .asp. В следующем примере показаны директивы для VBScript в качестве основного языка сценариев на странице:

<%@ LANGUAGE=VBScript %>

Директива обработки должна быть первой строкой в файле «.asp». Если страница должна содержать несколько директив, они должны располагаться внутри одной пары разделителей. Включение в файл директивы обработки с помощью инструкции #include не допускается. (Дополнительные сведения см. в разделе Включение файлов.) От ключевого слова знак (@) должен отделяться пробелом. Ниже перечислены ключевые слова, которые могут применяться в директивах обработки.

    * LANGUAGE. Установка языка сценария для файла «.asp».
    * ENABLESESSIONSTATE. Это ключевое слово указывает на использование в файле «.asp» сведений о состоянии сеанса.
    * CODEPAGE. Установка кодовой страницы (кодировки символов) для файла «.asp».
    * LCID. Установка для файла кода языка (местности).
    * TRANSACTION. Выполнение файла «.asp» в контексте транзакции. 

Важно!   Одна директива может содержать несколько ключевых слов. Пары, образуемые ключевым словом и значением, должны разделяться пробелами. Пробелы (=) вокруг знака равенства не допускаются.

В следующем примере задаются язык сценария и кодовая страница:

<%@ LANGUAGE="JScript" CODEPAGE="932" %>

Возможные языки сценария ASP.Net;

LANGUAGE="C#" -- Задаёт командный язык Си шарп
LANGUAGE="JScript" -- Задаёт кломандный язык как JavaScript;
LANGUAGE="VB" -- Задаёт командный язык как Visual Basic
LANGUAGE="VBScript" (устаревший) -- Задаёт командный язык как Visual Basics Script (усечёную версию VB.Net для браузеров).

<end node> 5P9i0s8y19Z
dt=Text
<node>
Синтаксис Visual Basic
2
Язык Visual Basic не чувствителен к регистру символов.

Комментарии в PHP начинаются с символа "'" ( апостроф, строчные комментарии).

Все переменные языка Visual Basic желательно начинать со строчной латинской буквы, например:

iFirstVariable, secondVariable

Перед использованием переменные определяются командой Dim, например:

Dim iFirst AS Integer ' Объявляется целочисленная переменная iFirst
Dim sArray(100) As String 'Объявляется массив строковых переменных размером в 100 элементов
Dim bItem As Boolean 'Объявляется логическая переменная bItem

Литералы в Visual Basic заключаются в двойные кавычки, в строке использовать подстановочные знаки в литералах нельзя. Например:

"Товар стоит $100"

Вместо подстановочных знаков в Visual Basics используются предопределённые константы.

В языке присутствуют стандартные операторы:

1. Присвоения значения;
2. Ветвления if then else;
3. Операторы цикла for, while, do while;
4. Оператор множественного выбора switch;
5. Другие операторы, синтаксис и назначение которых можно просмотреть в руководстве по языку Visual Basic;

<end node> 5P9i0s8y19Z
dt=Text
<node>
Синтаксис JavaScript
2
Язык JavaScript чувствителен к регистру символов.

Комментарии в JavaScript начинаются с символов "//" (строчные комментарии). или ограничиваются знаками "/* ... */";

Любой оператор JavaScript заканчивается знаком ";".

Все переменные языка JavaScript желательно начинать со строчной латинской буквы, например:

iFirstVariable, secondVariable

Перед использованием переменные определяются командой var, например:

var int iFirst // Объявляется целочисленная переменная iFirst
var string sArray(100)  // Объявляется массив строковых переменных размером в 100 элементов
var bool bItem // Объявляется логическая переменная bItem

Литералы в Visual Basic заключаются в двойные кавычки, причём в строке использовать подстановочные знаки в можно. Например:

"Товар стоит $100\n"

В языке присутствуют стандартные операторы:

1. Присвоения значения;
2. Ветвления if then else;
3. Операторы цикла for, while, do while;
4. Оператор множественного выбора switch;
5. Другие операторы, синтаксис и назначение которых можно просмотреть в руководстве по языку JavaScript;

Обычно программы на языке JavaScript составлены так, что вывод текста на HTML стераницу не требуется. Если же вывод всё-такие необходим, то вывод осуществляется непосредственно в DOM оператором присваиванеия.

<end node> 5P9i0s8y19Z
dt=Text
<node>
Синтаксис языка PERL
2
Язык Perl чувствителен к регистру символов.

Комментарии в PHP начинаются с символа "#" (строчные комментарии)

Любой оператор PHP заканчивается знаком ";".

Все переменные языка PHP начинаются со знака доллара "$", например:

$FirstVariable, $secondVariable

При объявлении переменных удобно использовать венгерскую нотацию. При этом надо помнить, что переменные предварительно нигде не описываются, и создаются в момент присвоения им значения.

На языке Perl есть специальные переменные: массивы (начинаются с ")бассоциативные, или хеш-массивы (начинаются с %) и так называемые ссылки (начинаются с &, после которого идёт знак разименованной переменной). Это надо учитывать при назначении переменных и написании программ.

Литералы в PHP заключаются в одинарные кавычки (апосторофы), если нужно представить строку "как есть", или в двойные кавычки, если в строке нужно использовать подстановочные знаки. Например, описание двух следующих строк одинаково:

'Товар стоит $100'
"Товар стоит \$100"

Для вывода литерали или переменной в файл используется функция echo, например:


$cost = '$100';
print  "\n<p>The goods is cost: $cost</p>";

Выедет в результирующий файл строку:

<p>The goods is cost $100</p>

В языке присутствуют стандартные операторы:

1. Присвоения значения;
2. Ветвления if then else;
3. Операторы цикла for, while, do while;
4. Оператор множественного выбора switch;
5. Другие операторы, синтаксис и назначение которых можно просмотреть в руководстве по языку Perl;

<end node> 5P9i0s8y19Z
